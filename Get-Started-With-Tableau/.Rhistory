hist(train$X)
hist(train$X[train$X>-122])
hist(train$X[train$X<-122])
head(train$X)
train=read_csv(file,col_types=list(Dates=col_datetime(format='%Y-%m-%d %H:%M:%S')))
hist(train$X[train$X<-122.0])
head(train$X)
train=read_csv(file,col_types=list(Dates=col_datetime(format='%Y-%m-%d %H:%M:%S')))
head(train$X)
head(train$X[train$X< (-122)])
histtrain$X[train$X< (-122)])
hist(train$X[train$X<(-122)])
hist(log(train$X))
hist(log(-train$X))
ggmap(SF_map)
rare_data=train[train$X<=-122 | train$Y>80,]
dim(rare_data)
View(rara_data)
View(rare_data)
rare_data=train[train$X>=-122 | train$Y>80,]
dim(rare_data)
View(rare_data)
data_filter=train[train$X<=-122 & train$Y<90,]
dim(data_filter
)
loc=data_filter[,c('Category','X','Y')]
head(loc)
ggmap(SF_map)+geom_jitter(aes(X,Y,colour=Category),data=loc,alpha=0.5)
ggmap(SF_map)+geom_jitter(aes(X,Y,colour=Category),data=loc[loc$Category=='ASSAULT',],alpha=0.5)
ggmap(SF_map)+geom_jitter(aes(X,Y,colour=Category),data=loc[loc$Category=='ASSAULT',],alpha=0.1)
n=sample(nrow(loc),500)
ggmap(SF_map)+geom_jitter(aes(X,Y,colour=Category),alpha=0.1,data=loc[n,])
ggmap(SF_map)+geom_jitter(aes(X,Y,colour=Category),alpha=0.5,data=loc[n,])
x=data.frame(table(train$Category))
View(x)
x=x[order(x,decreasing = T),]
View(x)
x=x[order(x$Freq,decreasing = T),]
View(x)
ggmap(SF_map)+geom_jitter(aes(X,Y,colour=Category),data=loc[loc$Category=='LARCENY/THEFT',],alpha=0.1)
ggmap(SF_map)+geom_jitter(aes(X,Y,colour=Category),data=loc[loc$Category=='ARSON',],alpha=0.1)
ggmap(SF_map)+geom_jitter(aes(X,Y,colour=Category),data=loc[loc$Category=='ARSON',],alpha=0.5)
a=c(1,2,1)
b=c(1,1,1)
a==b
number=0:9
result=sample(number,6,replacement=T)
checkResult=function(ticket,result){
num_hit=sum(ticket==result)
if (num_hit==1) award=5e6 else award=0
}
?sample
result=sample(number,6,replace=T)
checkResult=function(ticket,result){
num_hit=sum(ticket==result)
if (num_hit==1) award=5e6 else award=0
}
my_ticket=c(8,8,0,1,2,2)
award=-2+checkResult(my_ticket,result)
award
award=0
for (i in 1:1000){
my_ticket=c(8,8,0,1,2,2)
result=sample(number,6,replace=T)
award=award-2+checkResult(my_ticket,result)
}
award
checkResult=function(ticket,result){
num_hit=sum(ticket==result)
if (num_hit==6) award=5e6 else award=0
}
award=0
for (i in 1:1000){
my_ticket=c(8,8,0,1,2,2)
result=sample(number,6,replace=T)
award=award-2+checkResult(my_ticket,result)
}
award
award=0
for (i in 1:1e6){
my_ticket=c(8,8,0,1,2,2)
result=sample(number,6,replace=T)
award=award-2+checkResult(my_ticket,result)
}
award
1e6
data=read.csv('/Users/chaoranliu/Downloads/Programming Assignment 1 Data New/ExcelFormattedGISTEMPDataCSV.csv')
data2=read.csv('/Users/chaoranliu/Downloads/Programming Assignment 1 Data New/ExcelFormattedGISTEMPData2CSV.csv')
View(data)
?read.csv
data=read.csv('/Users/chaoranliu/Downloads/Programming Assignment 1 Data New/ExcelFormattedGISTEMPDataCSV.csv',na.strings=c("NA","***",'****'))
data2=read.csv('/Users/chaoranliu/Downloads/Programming Assignment 1 Data New/ExcelFormattedGISTEMPData2CSV.csv',na.strings=c("NA","***",'****'))
View(data)
View(data2)
JD=rowMeans(data[,2:13])
library(ggplot)
library(ggplot2)
p=gglot(data)+geom_point(aes(Year,Jan))+geom_line(aes(Year,Jan))
p=ggplot(data)+geom_point(aes(Year,Jan))+geom_line(aes(Year,Jan))
p
df=cbind(rep(data$Year,12),stack(data[,2:13]))
View(df)
colnames(df)=c('Year','Temp','Month')
View(df)
p=ggplot(df,aes(Year,Temp,colour=Month))+geom_line()+geom_point()_theme_bw()
p=ggplot(df,aes(Year,Temp,colour=Month)+geom_line()+geom_point()+theme_bw()
p=ggplot(df,aes(Year,Temp,colour=Month))+geom_line()+geom_point()+theme_bw()
p
data$Annual=rowMeans(data[,2:13])
View(data)
ggplot(data,aes(Year,Annual))+geom_line()+geom_point()+theme_bw()
source('~/Dropbox/kaggle/myFun.R')
zonal_data=stack_data(data2$Year,data2[,2:4])
View(zonal_data)
colnames(data2$Year)
names(data$2$Year)
names(data2$Year)
zonal_data=stack_data(data2[,1],data2[,2:4])
View(zonal_data)
colnames(zonal_data)=c('Year','Temp','Zone')
ggplot(zonal_data,aes(Year,Temp,colour=Zone))+geom_line()+geom_point()_theme_bw()
ggplot(zonal_data,aes(Year,Temp,colour=Zone))+geom_line()+geom_point()+theme_bw()
normalized_zonal=data2[,1:4]
normalized_zonal[,3:4]=normalized_zonal[,3:4]/normalized_zonal[,2]
View(normalized_zonal)
normalized_zonal=stack_data(normalized_zonal[,1],normalized_zonal[,3:4])
View(normalized_zonal)
colnames(normalized_zonal)=c('Year','Temp','Zone')
ggplot(zonal_data,aes(Year,Temp,colour=Zone))+geom_line()+geom_point()+theme_bw()
ggplot(normalized_zonal,aes(Year,Temp,colour=Zone))+geom_line()+geom_point()+theme_bw()
data$Mean=data$Annual
data$Stdev=apply(data[,2:13,1,stdev])
data$Stdev=apply(data[,2:13],1,stdev)
?std
?stdev
?var
?dev
data$Stdev=apply(data[,2:13],1,function(x) var(x)**0.5)
View(data)
data$Annual=NULL
with(data, plot(Year,Stdev))
with(data, plot(Year,Mean))
data$Max=apply(data[,2:13],1,max)
data$Min=apply(data[,2:13],1,min)
with(data, plot(Year,Max))
with(data, plot(Year,Min))
data$Range=data$Max-data$Min
with(data, plot(Year,Range))
View(data)
seasonal=stack_data(data[,1],data[,16:19])
names(seasonal)
names(seasonal)=c('Year','Temp','Season')
ggplot(seasonal,aes(Year,Temp,colour=Seaon))+geom_point()+geom_line()
ggplot(seasonal,aes(Year,Temp,colour=Season))+geom_point()+geom_line()
ggplot(seasonal,aes(Season,Temp))+geom_boxplot()
ggplot(seasonal,aes(Season,Temp))+geom_boxplot()+geom_point()
ggplot(seasonal,aes(Season,Temp))+geom_boxplot()+geom_jitter()
ggplot(data,aes(Year,Mean))+geom_density()
ggplot(data,aes(Mean))+geom_density()
image(data[,2:13])
image(as.matrix(data[,2:13]))
data$decade=floour(data$Year/10)
data$decade=flour(data$Year/10)
data$decade=floor(data$Year/10)
View(data)
decade=aggregate(~decade,data=data[,2:13],mean)
decade=aggregate(>~decade,data=data[,2:13],mean)
decade=aggregate(.~decade,data=data[,2:13],mean)
decade=aggregate(.~decade,data=data[,c(2:13,25)],mean)
View(decade)
image(decade)
image(as.matrix(decade))
image(as.matrix(decade[,2:13]))
?image
a=as.matrix(decade[,2:13])
View(a)
image(a,ylab='decade',xlab='month')
with(data,plot(decade,Mean))
p=ggolot(data)+geom_line(aes(Year,Mean),colour='blue')
p=ggplot(data)+geom_line(aes(Year,Mean),colour='blue')
p
p=p+theme_bw()
p
library(quantmod)
?SMA
data$MA5=SMA(data$Mean,5)
MA5=SMA(data$Mean,5)
ts=as.ts(data)
plot(ts)
plot(ts[,1:2])
plot(ts[,2])
?ts
ts=as.ts(data,start=1880)
plot(ts[,2])
head(ts)
row.names(ts)
index(ts)
index(ts)=data$Year
library(lubridate)
data$Year=as.Date(data$Year)
info(data)
ts=as.ts(data)
plot(ts[,2])
head(ts)
MA5=SMA(ts$Mean,5)
MA5=SMA(ts['Mean'],5)
MA5=SMA(ts['Mean'],1)
ts[2]
ts[,1]
index.xts(ts)=data$Year
a=as.matrix(data)
row.names(a)=data$Year
View(a)
View(data)
data$Year=row.names(data)
View(data)
data$Year=row.names(a)
View(data)
a$Year=NULL
View(a)
a=as.matrix(data)
geo_temp=stack_data(data2[,1],data2[,2:15])
head(geo_temp)
p=ggplot(geo_temp,aes(df1,values,colour=ind))+geom_line()+theme_bw()
p
View(geo_temp)
unique(geo_temp$ind)
colnames(data2)
?gsub
trans=function(a){
a=gsub("X24S.EQU|EQU.24N|X24S.24N", 'Tropics',a)
a=gsub("X24N.44N|X44S.24S",'SubTropics',a)
a=gsub("X24N.44N|X44S.24S",'SubTropics',a)
a=gsub("X44N.64N|X64S.44S",'WarmZone',a)
a=gsub("X90S.64S|X64N.90N",'WarmZone',a)
return(a)
}
b=trans(geo_temp$ind)
geo_temp$zone=b
View(geo_temp)
ggplot(geo_temp,aes(df,values,colour=zone))+geom_line()
ggplot(geo_temp,aes(df1,values,colour=zone))+geom_line()
a=as.ts(ts$Mean)
a=as.ts(data2$Glob)
MA5=SMA(a,5)
data2$5-Year-Mean=MA5
data2['5-Year-Mean']=MA5
View(data2)
ggplot(data2)+geom_line(aes(Year,Glob,colour='red'))+geom_line(aes(Year,5-Year-Mean))
ggplot(data2)+geom_line(aes(Year,Glob,colour='red'))
df=stack_data(data2[,1],data2[,c('Glob','5-Year-Mean')])
View(df)
data2$MA5=data2$5-Year-Mean
data2$MA5=data2['5-Year-Mean']
df=stack_data(data2$Year,data2[,c('Glob','MA5')])
ggplot(data2)+geom_line(aes(Year,Glob,colour='red'))+geom_line(aes(Year,MA5,colour='green'))
View(data2)
data2$MA5=NULL
df=aggregate(values~zone,geo_temp,mean)
df
df=aggregate(values~zone+df1,geo_temp,mean)
df
geo=data2[c('Year',"X24S.EQU","EQU.24N","X24S.24N","X24N.44N","X44S.24S","X24N.44N","X44S.24S","X44N.64N","X64S.44S","X90S.64S","X64N.90N")]
geo=stack_data(geo)
names(geo)=c('Year','Temp','Zone')
geo$Zone=trans(geo$Zone)
geo=data2[c('Year',"X24S.EQU","EQU.24N","X24S.24N","X24N.44N","X44S.24S","X24N.44N","X44S.24S","X44N.64N","X64S.44S","X90S.64S","X64N.90N")]
geo=stack_data(geo[,1],geo[,2:])
names(geo)=c('Year','Temp','Zone')
geo$Zone=trans(geo$Zone)
geo=data2[c('Year',"X24S.EQU","EQU.24N","X24S.24N","X24N.44N","X44S.24S","X24N.44N","X44S.24S","X44N.64N","X64S.44S","X90S.64S","X64N.90N")]
geo=stack_data(geo[,1],geo[,2:ncol(geo)])
names(geo)=c('Year','Temp','Zone')
geo$Zone=trans(geo$Zone)
View(geo)
geo=aggregate(Temp~Year+Zone,geo,mean)
View(geo)
geo=data2[c('Year',"X24S.EQU","EQU.24N","X24S.24N","X24N.44N","X44S.24S","X24N.44N","X44S.24S","X44N.64N","X64S.44S","X90S.64S","X64N.90N")]
geo=stack_data(geo[,1],geo[,2:ncol(geo)])
names(geo)=c('Year','Temp','Zone')
geo$Zone=trans(geo$Zone)
View(geo)
trans=function(a){
a=gsub("X24S.EQU|EQU.24N|X24S.24N", 'Tropics',a)
a=gsub("X24N.44N|X44S.24S",'SubTropics',a)
a=gsub("X44N.64N|X64S.44S",'WarmZone',a)
a=gsub("X90S.64S|X64N.90N",'ColdZone',a)
return(a)
}
geo=data2[c('Year',"X24S.EQU","EQU.24N","X24S.24N","X24N.44N","X44S.24S","X24N.44N","X44S.24S","X44N.64N","X64S.44S","X90S.64S","X64N.90N")]
geo=stack_data(geo[,1],geo[,2:ncol(geo)])
names(geo)=c('Year','Temp','Zone')
geo$Zone=trans(geo$Zone)
geo=aggregate(Temp~Year+Zone,geo,mean)
View(geo)
trans=function(a){
a=gsub("X24S.EQU|EQU.24N", 'Tropics',a)
a=gsub("X24N.44N|X44S.24S",'SubTropics',a)
a=gsub("X44N.64N|X64S.44S",'WarmZone',a)
a=gsub("X90S.64S|X64N.90N",'ColdZone',a)
return(a)
}
geo=data2[c('Year',"X24S.EQU","EQU.24N","X24N.44N","X44S.24S","X44N.64N","X64S.44S","X90S.64S","X64N.90N")]
geo=stack_data(geo[,1],geo[,2:ncol(geo)])
names(geo)=c('Year','Temp','Zone')
geo$Zone=trans(geo$Zone)
geo=aggregate(Temp~Year+Zone,geo,mean)
View(geo)
ggplot(geo,aes(Year,Temp,colour=Zone))+geom_line()
ggplot(geo,aes(Year,Temp,colour=Zone))+geom_smooth()
geo$Decade=floor(geo$Year/10)*10
ggplot(geo,aes(Decade,Temp,colour=Zone))+geom_line()
geo=data2[c('Year','Glob',"X24S.EQU","EQU.24N","X24N.44N","X44S.24S","X44N.64N","X64S.44S","X90S.64S","X64N.90N")]
geo=stack_data(geo[,1],geo[,2:ncol(geo)])
names(geo)=c('Year','Temp','Zone')
geo$Zone=trans(geo$Zone)
geo=aggregate(Temp~Year+Zone,geo,mean)
p=ggplot(geo,aes(Year,Temp,colour=Zone))+geom_line()
p
?geom_smooth
p=ggplot(geo,aes(Year,Temp,colour=Zone))+geom_line()+theme_bw(base_size=14)
p
p=ggplot(geo,aes(Year,Temp,colour=Zone))+geom_line()+theme_bw(base_size=18)
p
p=ggplot(geo,aes(Year,Temp,colour=Zone))+geom_line()+theme_bw(base_size=20)
p
png('Annual Temperature by Zone.png',width=800,height=600,units='px')
p=ggplot(geo,aes(Year,Temp,colour=Zone))+geom_line()+theme_bw(base_size=14)+labs(y='Temperature/0.01C',title='Annual Ocean-Land Temperature by Zones')
dev.off()
png('Annual Temperature by Zone.png',width=800,height=600,units='px')
ggplot(geo,aes(Year,Temp,colour=Zone))+geom_line()+theme_bw(base_size=14)+labs(y='Temperature/0.01C',title='Annual Ocean-Land Temperature by Zones')
dev.off()
pnorm(1)
?quantile
?qnorm
qnorm(0.95,1100,75)
qnorm(p=0.95,mean=1100,sd=75/(100**0.5))
FourHeads=5*(0.5**4*0.5)
FiveHeads=(0.5**5)
FourHeads+FiveHeads
pnorm((16-15)/(10/(100**0.5)))*2
(1-pnorm((16-15)/(10/(100**0.5))))*2
pnorm((16-15)/(10/(100**0.5)))
(pnorm((16-15)/(10/(100**0.5)))-0.5)*2
?ppois
ppois(0,5)
ppois(1,5)
ppois(0,15)
ppois(10,15)
?confint
?confint
qnorm(0.95)
1100+30*(9**0.5)*qnorm(0.95)
[1100-30*(9**0.5)*qnorm(0.95),1100+30*(9**0.5)*qnorm(0.95)]
list(1,1)
c(1,1)
c(1100-30*(9**0.5)*qnorm(0.95),1100+30*(9**0.5)*qnorm(0.95))
c(1100-30*(9**0.5)*qnorm(0.975),1100+30*(9**0.5)*qnorm(0.975))
c(1100-30*(9**0.5)*qnorm(0.975),1100+30*(9**0.5)*qnorm(0.025))
c(1100-30/(9**0.5)*qnorm(0.975),1100+30/(9**0.5)*qnorm(0.975))
library(readr)
data<-read_csv('/Users/chaoranliu/Desktop/data.csv')
View(head(data))
df<-data[c('BGN_DATE','EVTYPE','LENGTH','WIDTH','FATALITIES','INJURIES','LATITUDE','LONGITUDE')]
names(df)
df<-df[df$EVTYPE=='TORNADO',]
write.csv(df,'/Users/chaoranliu/Desktop/data.csv')
df<-data[c('BGN_DATE','EVTYPE','LENGTH','WIDTH','FATALITIES','INJURIES','LATITUDE','LONGITUDE','COUNTY')]
df<-df[df$EVTYPE=='TORNADO',]
write.csv(df,'/Users/chaoranliu/Desktop/data.csv')
df<-data[c('BGN_DATE','EVTYPE','LENGTH','WIDTH','FATALITIES','INJURIES','LATITUDE','LONGITUDE','COUNTYNAME')]
df<-df[df$EVTYPE=='TORNADO',]
write.csv(df,'/Users/chaoranliu/Desktop/data.csv')
df$LONGITUDE<-df$LONGITUDE/100
df$LATITUDE<-df$LATITUDE/(-100)
df$IMPACT<-df$FATALITIES+df$INJURIES
write.csv(df,'/Users/chaoranliu/Desktop/data.csv')
View(df)
names(df)
var<-c("BGN_DATE","EVTYPE","FATALITIES","INJURIES","LATITUDE","LONGITUDE","COUNTYNAME")
df<-data[var]
df$BGN_DATE<-as.Date(df$BGN_DATE,format="%m/%d/%Y %H:%M:%S")
library(lubridate)
df$YEAR<-year(df$BGN_DATE)
df1<-aggregate(.~YEAR,df,sum)
View(head(df))
df$LATITUDE<-df$LATITUDE/100
df$LONGITUDE<-df$LONGITUDE/(-100)
View(head(df))
df$IMPACT<-df$INJURIES+df$FATALITIES
View(head(df))
write.csv(df,'/Users/chaoranliu/Desktop/data.csv')
sample<-sample(nrow(df),10000)
write.csv(df[sample,],'/Users/chaoranliu/Desktop/data.csv')
sum(df$IMPACT==0)
df<-df[df$IMPACT==0,]
df<-data[var]
df$BGN_DATE<-as.Date(df$BGN_DATE,format="%m/%d/%Y %H:%M:%S")
df$YEAR<-year(df$BGN_DATE)
df$IMPACT<-df$INJURIES+df$FATALITIES
df$LONGITUDE<-df$LONGITUDE/(-100)
df$LATITUDE<-df$LATITUDE/100
View(head(df))
df1<-df[df$IMPACT!=0,]
View(df1)
write.csv(df1,'/Users/chaoranliu/Desktop/data.csv')
setwd("~/Desktop")
data<-read.csv('data.csv')
View(data)
names(data)
data$X<-NULL
type<-table(data$EVTYPE)
type<-data.frame(type)
head(type)
type<-type[order(type$Freq,decreasing = T),]
head(type)
head(type,10)
names(data)
library(readr)
data<-read_csv('data.csv.bz2',col_types='dcccdcccdccccdcdccdddddddcdccccddddcd')
data$BGN_DATE<-as.Date(data$BGN_DATE,format='%m/%d/%Y %H:%M:%S')
library(lubridate)
data$Year<-year(data$BGN_DATE)
data$LONGITUDE<-(-data$LONGITUDE/100)
data$LATITUDE<-data$LATITUDE/100
## function sort data descendingly
sortDF<-function(df,by){
df<-df[order(by,decreasing = T),]
return (df)
}
## function transform EXP to integers
transformEXP<-function(var){
if (class(var)!= 'character') var=sapply(var,as.character)
x=tolower(var)
x[x=='b']<-9
x[x=='h']<-2
x[x=='k']<-3
x[x=='m']<-6
x[x %in% c("","-","?","+")]<-0
x=as.integer(x)
return (x)
}
### Economic Loss = Property Loss + Crop Loss
data$PROPDMGEXP<-transformEXP(data$PROPDMGEXP)
data$CROPDMGEXP<-transformEXP(data$CROPDMGEXP)
data$PropLoss<-with(data,(PROPDMG*(10**PROPDMGEXP)+CROPDMG*(10**CROPDMGEXP)))
## Health Impact = Fatalities + Injuries
data$healthImpact<-data$FATALITIES+data$INJURIES
freqEVTYPE<-data.frame(table(data$EVTYPE))
freqEVTYPE<-sortDF(freqEVTYPE,freqEVTYPE$Freq)
View(freqEVTYPE)
names(data)
data$economicLoss<-with(data,(PROPDMG*(10**PROPDMGEXP)+CROPDMG*(10**CROPDMGEXP)))
names(data)
data0<-data[data$economicLoss!=0 | data$healthImpact!=0,]
data<-data[data$economicLoss!=0 | data$healthImpact!=0,]
freqEVTYPE<-data.frame(table(data$EVTYPE))
freqEVTYPE<-sortDF(freqEVTYPE,freqEVTYPE$Freq)
View(freq)
View(freqEVTYPE)
top5<-freqEVTYPE[1:5,1]
top5<-as.character(freqEVTYPE[1:5,1])
top5
data<-data[data$EVTYPE %in% top5,]
var<-c("EVTYPE",   "LATITUDE"  , "LONGITUDE" , "STATE" ,"Year","healthImpact","economicLoss" )
data<-data[,var]
write.csv('data.csv',row.names=F)
write.csv(data,'data.csv',row.names=F)
data$healthImpact[data$healthImpact==0]<-NA
data$economicLoss[data$economicLoss==0]<-NA
head(data)
write.csv(data,'data.csv',row.names=F)
data$healthImpact[is.na(data$healthImpact)]<-""
data$economicLoss[is.na(data$economicLoss)]<-""
head(data)
write.csv(data,'data.csv',row.names=F)
hist(data$healthImpact)
## loading data from
library(readr)
data<-read_csv('data.csv.bz2',col_types='dcccdcccdccccdcdccdddddddcdccccddddcd')
## Formatting variable Year, Longitude, Latitude
data$BGN_DATE<-as.Date(data$BGN_DATE,format='%m/%d/%Y %H:%M:%S')
library(lubridate)
data$Year<-year(data$BGN_DATE)
data$LONGITUDE<-(-data$LONGITUDE/100)
data$LATITUDE<-data$LATITUDE/100
## Creating the features we want to study:
### Economic Loss = Property Loss + Crop Loss
data$PROPDMGEXP<-transformEXP(data$PROPDMGEXP)
data$CROPDMGEXP<-transformEXP(data$CROPDMGEXP)
data$economicLoss<-with(data,(PROPDMG*(10**PROPDMGEXP)+CROPDMG*(10**CROPDMGEXP)))
## Health Impact = Fatalities + Injuries
data$healthImpact<-data$FATALITIES+data$INJURIES
## Too many EVTYPE, let's look at the top 5 in frequency:
## remove the disasters without impact or loss:
data<-data[data$economicLoss!=0 | data$healthImpact!=0,]
freqEVTYPE<-data.frame(table(data$EVTYPE))
freqEVTYPE<-sortDF(freqEVTYPE,freqEVTYPE$Freq)
top5<-as.character(freqEVTYPE[1:5,1])
data<-data[data$EVTYPE %in% top5,]
## select the variables we need
var<-c("EVTYPE",   "LATITUDE"  , "LONGITUDE" , "STATE" ,"Year","healthImpact","economicLoss" )
data<-data[,var]
names(data0)
data<-read_csv('data.csv.bz2',col_types='dcccdcccdccccdcdccdddddddcdccccddddcd')
data0<-data
library(knitr)
setwd("~/Desktop/github/DataStory/Get-Started-With-Tableau")
knit2html('US Natural Disaster.Rmd')
knit2html('US Natural Disaster.Rmd')
data<-data0
knit2html('US Natural Disaster.Rmd')
